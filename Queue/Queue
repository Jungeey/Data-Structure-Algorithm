#include<iostream>
using namespace std;
#define max 3
class Queue{
	private:
	int A[max];
	public:
		int front=0,rear=-1;
		void MakeEmpty(){
			front=0;
			rear=-1;
		}
		bool CheckEmpty(){
			if(rear<front){
			    rear=-1;
				front=0;
				return true;
			} else {
				return false;
			}
		}
		bool IsFull(){
			if(rear==max-1){
				return true;
			} else {
				return false;
			}
		}
		void Enqueue(){
		    if(IsFull()==1){
		        cout<<"Queue is Full.So, can`t add more."<<endl;
		    }else{
		        int data;
			    cout<<"Enter a data: ";
			    cin>>data;
			    rear++;
			    A[rear]=data;
		    }
		}
		void Dequeue(){
		    if(CheckEmpty()==1){
		        cout<<"Queue is empty.Nothing to delete."<<endl;
		    }else{
		        cout<<A[front]<<" deleted."<<endl;
				front++;
		    }
		}
		void Traverse(){
		    if(CheckEmpty()==1){
		        cout<<"Queue is Full. So, nothing to display."<<endl;
		    }else{
		        for(int i=front;i<=rear;i++){
		            cout<<A[i]<<", ";
		        }
			    cout<<endl;
		    }
			
		}
};
int main(){
	Queue obj;
	int choice;
	do{
		cout<<"Enter a choice: "<<endl;
		cout<<"1. Make Empty "<<endl;
		cout<<"2. Check Empty "<<endl;
		cout<<"3. Check Full "<<endl;
		cout<<"4. Enqueue"<<endl;
		cout<<"5. Dequeue"<<endl;
		cout<<"6. Traverse"<<endl;
		cout<<"7. End"<<endl;
		cin>>choice;
		
		switch(choice){
			case 1:
				obj.MakeEmpty();
				cout<<"Queue had been made Empty."<<endl;
				break;
			case 2:
				if(obj.CheckEmpty()==1){
					cout<<"Queue is Empty."<<endl;
				} else{
					cout<<"Queue is not Empty."<<endl;
				}
				break;
			case 3:
				if(obj.IsFull()==1){
					cout<<"Queue is Full."<<endl;
				} else{
					cout<<"Queue is not Full."<<endl;
				}
				break;
			case 4:
					obj.Enqueue();
				break;
			case 5:
				obj.Dequeue();
				break;
			case 6:
					obj.Traverse();	
				break;
			default:
				break;
			
		}
	} while(choice!=7);
	return 0;
}
